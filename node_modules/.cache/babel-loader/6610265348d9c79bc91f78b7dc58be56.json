{"ast":null,"code":"import { TYPES } from \"../actions/cart.action\";\nconst INITIAL_STATE = [];\n\nconst CartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TYPES.INCREMENT_ITEM_CART:\n      return state.map(item => item.id === action.payload ? { ...item,\n        quantity: item.quantity++\n      } : item);\n\n    case TYPES.DECREMENT_ITEM_CART:\n      return state.map(item => item.id === action.payload ? { ...item,\n        quantity: item.quantity--\n      } : item);\n\n    case TYPES.INSERT_ITEM_CART:\n      return [...state, action.payload];\n\n    case TYPES.REMOVE_ITEM_CART:\n      return state.cart.filter(item => item.id !== action.payload);\n\n    case TYPES.CLEAR_CART:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nexport default CartReducer;","map":{"version":3,"sources":["/Users/luciano/Desktop/hack/megahack-sebrae/src/store/reducers/cart.reducer.js"],"names":["TYPES","INITIAL_STATE","CartReducer","state","action","type","INCREMENT_ITEM_CART","map","item","id","payload","quantity","DECREMENT_ITEM_CART","INSERT_ITEM_CART","REMOVE_ITEM_CART","cart","filter","CLEAR_CART"],"mappings":"AAAA,SAASA,KAAT,QAAsB,wBAAtB;AAEA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGF,aAAT,EAAwBG,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,KAAK,CAACM,mBAAX;AACE,aAAOH,KAAK,CAACI,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAnB,GACI,EAAE,GAAGF,IAAL;AAAWG,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL;AAArB,OADJ,GAEIH,IAHC,CAAP;;AAMF,SAAKR,KAAK,CAACY,mBAAX;AACE,aAAOT,KAAK,CAACI,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAnB,GACI,EAAE,GAAGF,IAAL;AAAWG,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL;AAArB,OADJ,GAEIH,IAHC,CAAP;;AAMF,SAAKR,KAAK,CAACa,gBAAX;AACE,aAAO,CAAC,GAAGV,KAAJ,EAAWC,MAAM,CAACM,OAAlB,CAAP;;AAEF,SAAKV,KAAK,CAACc,gBAAX;AACE,aAAOX,KAAK,CAACY,IAAN,CAAWC,MAAX,CAAmBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAA/C,CAAP;;AAEF,SAAKV,KAAK,CAACiB,UAAX;AACE,aAAO,EAAP;;AAEF;AACE,aAAOd,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,WAAf","sourcesContent":["import { TYPES } from \"../actions/cart.action\";\n\nconst INITIAL_STATE = [];\n\nconst CartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TYPES.INCREMENT_ITEM_CART:\n      return state.map((item) =>\n        item.id === action.payload\n          ? { ...item, quantity: item.quantity++ }\n          : item\n      );\n\n    case TYPES.DECREMENT_ITEM_CART:\n      return state.map((item) =>\n        item.id === action.payload\n          ? { ...item, quantity: item.quantity-- }\n          : item\n      );\n\n    case TYPES.INSERT_ITEM_CART:\n      return [...state, action.payload];\n\n    case TYPES.REMOVE_ITEM_CART:\n      return state.cart.filter((item) => item.id !== action.payload);\n\n    case TYPES.CLEAR_CART:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nexport default CartReducer;\n"]},"metadata":{},"sourceType":"module"}